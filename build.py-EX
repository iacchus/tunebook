#!/usr/bin/env python

import os
import glob
# use os.system("") to do it lil boy

def clear_ly(filename):
    #filename = "cooleys.ly"
    with open(filename, 'r') as MYFILE:
        lines = list(MYFILE)

    for idx,line in enumerate(lines):
            if "tagline" in line:
                    lines[idx] = "\ttagline = \"\"\n"

    with open(filename, 'w') as FREAK:
        FREAK.write(''.join(lines))

def return_html(what=""):
    return """
    <!DOCTYPE html>
    <html lang="en">
      <head>

        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width,initial-scale=1">

        <title>My Tunebook</title>

        <link href="index_files/featherlight.min.css" type="text/css" rel="stylesheet" />
        <link rel="stylesheet" href="index_files/style.css">

        <script src="index_files/jquery-latest.js"></script>
        <script src="index_files/abcjs_basic_2.3-min.js"></script>

        <script src="index_files/script.js"></script>

      </head>
      <body>
        <div id="page-container">
          <h1>Mercurii Tunebook</h1>

          <div id="presentation">
            From the repository <a href="https://github.com/iacchus/tunebook/">https://github.com/iacchus/tunebook/</a><br/>
            Visit my weblog <a href="https://iacchus.github.io">“A Dança dos Espíritos”</a><br/><br/>
          </div>

          <div id="files">
            <!--<div id="files-title">Browse files..</div>-->
    {0}
          </div> 
        </div>
      </body>
    </html>
""".format(what)
#cleanly('cooleys.ly')

#print("Listing existing PNG files..")
#existing_files = glob.glob('*.png', recursive=False)
#for idx,existing_file in enumerate(existing_files):
#    existing_files[idx] = "{}.abc".format(existing_file.split('.')[0])

print("Listing ABC files..")
abc_files = glob.glob('abc/*.abc', recursive=False)
#abc_files.sort()

#print("Converting ABC files with abc2ly..")
#for abc_file in abc_files:
#    if abc_file.split('/')[1] not in existing_files:
#        os.system("abc2ly {0}".format(abc_file))
#
#print("Converting .LY files to PNG..")
#ly_files = glob.glob('*.ly', recursive=False)
#for ly_file in ly_files:
#    clear_ly(ly_file)
#    os.system("lilypond -fpng -dresolution=180 {0}".format(ly_file))


#print("Trimming PNG white space..")
#png_files = glob.glob('*.png', recursive=False)
#for png_file in png_files:
#    os.system("convert {0} -trim {0}".format(png_file))

#print("Removing extra resource files..")
#os.system("rm *.ly *.midi *.ps *.pdf")

tune_files = str()
abc_code_files = str()
#index_filename = "index-rendered.html"

index_abcjs_filename = "index.html"

#png_files.sort()

#print("Writing index file listing..")
#for file in png_files:
    #index_files += "<a href='{0}' data-featherlight='iframe'>{0}</a><br/>\n".format(file)
#    tune_files += "<div class='tune-container'><img src='{0}' /></div>\n".format(file)

abc_files = glob.glob('abc/*.abc', recursive=False)
abc_files.sort()

for abc_file in abc_files:
    #index_files += "<a href='{0}' data-featherlight='iframe'>{0}</a><br/>\n".format(file)
    with open(abc_file, 'r') as MYFILE:
        abc = "".join(list(MYFILE))
    abc_code_files += "<div class='tune-container' id='{0}'><pre class='abctune'>{1}</pre></div>\n".format(abc_file.split('.')[0], abc)


#print(file_contents)

#print("Writing index file '{}'..".format(index_filename))

#with open(index_filename,'w') as fd:
#    fd.write(return_html(tune_files))
#    fd.close()

print("Writing index file '{}'..".format(index_abcjs_filename))
with open(index_abcjs_filename,'w') as fd:
    fd.write(return_html(abc_code_files))
    fd.close()

git_commands = "git add .; git commit -a -m 'autocommit from build.py!'; git push"
print("Running git commands {}..".format(git_commands))
os.system(git_commands)

print("Done..")
